"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dashboard",{

/***/ "./src/components/LLMMarketplaceDashboard.tsx":
/*!****************************************************!*\
  !*** ./src/components/LLMMarketplaceDashboard.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dfinity_agent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @dfinity/agent */ \"./node_modules/@dfinity/agent/lib/esm/index.js\");\n/* harmony import */ var _declarations_model_storage_model_storage_did_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../declarations/model_storage/model_storage.did.js */ \"./src/declarations/model_storage/model_storage.did.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst LLMMarketplaceDashboard = (param)=>{\n    let { authClient, identity } = param;\n    _s();\n    const [modelNames, setModelNames] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedModel, setSelectedModel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [uploadFile, setUploadFile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [principal, setPrincipal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Stats data\n    const stats = {\n        totalRevenue: 45231.89,\n        subscriptions: 2350,\n        sales: 12234,\n        activeNow: 573\n    };\n    const initActor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            const agent = new _dfinity_agent__WEBPACK_IMPORTED_MODULE_2__.HttpAgent({\n                host: \"http://localhost:4943\" || 0,\n                identity\n            });\n            if (true) {\n                await agent.fetchRootKey();\n            }\n            const actor = _dfinity_agent__WEBPACK_IMPORTED_MODULE_2__.Actor.createActor(_declarations_model_storage_model_storage_did_js__WEBPACK_IMPORTED_MODULE_3__.idlFactory, {\n                agent,\n                canisterId: process.env.NEXT_PUBLIC_MODEL_STORAGE_CANISTER_ID\n            });\n            return actor;\n        } catch (err) {\n            console.error(\"Failed to initialize actor:\", err);\n            throw err;\n        }\n    }, [\n        identity\n    ]);\n    const fetchModelNames = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            const actor = await initActor();\n            const names = await actor.get_model_names();\n            setModelNames(names);\n            setError(null);\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : \"Failed to fetch model names\";\n            setError(errorMessage);\n            console.error(\"Fetch error:\", err);\n        }\n    }, [\n        initActor\n    ]);\n    const handleFileUpload = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file) {\n            setUploadFile(file);\n            setError(null);\n        }\n    };\n    const handleUpload = async ()=>{\n        if (!uploadFile) return;\n        try {\n            setLoading(true);\n            setError(null);\n            const buffer = await uploadFile.arrayBuffer();\n            const uint8Array = new Uint8Array(buffer);\n            const actor = await initActor();\n            const result = await actor.store_model(uploadFile.name, Array.from(uint8Array), JSON.stringify({\n                name: uploadFile.name,\n                size: uploadFile.size,\n                type: uploadFile.type,\n                uploadDate: new Date().toISOString()\n            }));\n            if (\"Err\" in result) {\n                throw new Error(typeof result.Err === \"string\" ? result.Err : \"Upload failed\");\n            }\n            await fetchModelNames();\n            setUploadFile(null);\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : \"Failed to upload model\";\n            setError(errorMessage);\n            console.error(\"Upload error:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const handleDownload = async (modelName)=>{\n        try {\n            setLoading(true);\n            setError(null);\n            const actor = await initActor();\n            const result = await actor.get_model_weights(modelName);\n            if (\"Ok\" in result) {\n                const blob = new Blob([\n                    new Uint8Array(result.Ok)\n                ]);\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement(\"a\");\n                a.href = url;\n                a.download = modelName;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                URL.revokeObjectURL(url);\n            } else {\n                throw new Error(typeof result.Err === \"string\" ? result.Err : \"Download failed\");\n            }\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : \"Failed to download model\";\n            setError(errorMessage);\n            console.error(\"Download error:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Set principal on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (identity) {\n            setPrincipal(identity.getPrincipal().toString());\n        }\n    }, [\n        identity\n    ]);\n    // Fetch model names when identity is available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (identity) {\n            fetchModelNames();\n        }\n    }, [\n        identity,\n        fetchModelNames\n    ]);\n    // ... Rest of your JSX return statement stays the same ...\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-6 max-w-7xl mx-auto space-y-6\"\n    }, void 0, false, {\n        fileName: \"/Users/yashbharti/Desktop/Engineering/core_projects/llm_marketplace/src/components/LLMMarketplaceDashboard.tsx\",\n        lineNumber: 181,\n        columnNumber: 5\n    }, undefined);\n};\n_s(LLMMarketplaceDashboard, \"wdoiS7qOZiDYyiYQ00Tzr1Q1bsY=\");\n_c = LLMMarketplaceDashboard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LLMMarketplaceDashboard);\nvar _c;\n$RefreshReg$(_c, \"LLMMarketplaceDashboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/LLMMarketplaceDashboard.tsx\n"));

/***/ })

});